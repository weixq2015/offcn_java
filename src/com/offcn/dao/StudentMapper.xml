<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offcn.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.offcn.pojo.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="classid" jdbcType="INTEGER" property="classid" />
    <result column="usertype" jdbcType="INTEGER" property="usertype" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="loginname" jdbcType="VARCHAR" property="loginname" />
    <result column="files" jdbcType="VARCHAR" property="files" />
    
    <association property="classes" javaType="com.offcn.pojo.Classes">
    	<id column="id" jdbcType="INTEGER" property="id" />
    	<result column="name" jdbcType="VARCHAR" property="name"/>
    	<result column="type" jdbcType="VARCHAR" property="type"/>
    </association>
    <association property="course" javaType="com.offcn.pojo.Course">
    	<id column="id" jdbcType="INTEGER" property="id" />
    	<result column="name" jdbcType="VARCHAR" property="name"/>
    	<result column="type" jdbcType="VARCHAR" property="type"/>
    </association>
    <association property="grade" javaType="com.offcn.pojo.Grade">
    	<id column="id" jdbcType="INTEGER" property="id" />
    	<result column="pgrade" jdbcType="VARCHAR" property="pgrade"/>
    	<result column="kgrade" jdbcType="VARCHAR" property="kgrade"/>
    	<result column="zgrade" jdbcType="VARCHAR" property="zgrade"/>
    </association>
   <association property="sc" javaType="com.offcn.pojo.Sc">
    	<!-- <id column="id" jdbcType="INTEGER" property="id" /> -->
    	<result column="tid" jdbcType="VARCHAR" property="tid"/>
    	<result column="sid" jdbcType="VARCHAR" property="sid"/>
    	<result column="cid" jdbcType="VARCHAR" property="cid"/>
    	<association property="teacher" javaType="com.offcn.pojo.Teacher">
	    	<id column="id" jdbcType="INTEGER" property="id" />
	    	<result column="name" jdbcType="VARCHAR" property="name"/>
	    	<result column="workId" jdbcType="VARCHAR" property="workid"/>
    	</association>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, sex, address, tel, classid, usertype, password, loginname, files
  </sql>
  <select id="login" parameterType="Student" resultType="Student">
  select * from student where loginname=#{name} and password=#{password}
  </select>
  <select id="getList" parameterType="map" resultType="StudentExt">
     select s.*,c.name cname from student s,classes c where s.classid=c.id limit #{start},#{size}
  </select>
   <!--通过班级id来获取一堆学生  -->
  <select id="getStusByids" parameterType="java.lang.Integer" resultType="Student">
    select 
    *
    from student
    where classid = #{classid,jdbcType=INTEGER}
  </select>
  
   <select id="getNum"  resultType="int">
     select count(*) from student 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.util.List">
    delete from student where id in (
    	<foreach collection="list" item="id" separator=",">
    	#{id}
    	</foreach>
    ) 
  </delete>
  <update id="updateByPrimaryKey" parameterType="Student" >
    update student
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      classid = #{classid,jdbcType=INTEGER},
      usertype = #{usertype,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      files = #{files,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
    <!-- <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if> -->
  </update>
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultType="Student">
    select 
    *
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <insert id="addStu" parameterType="com.offcn.pojo.Student" >
    insert into student (id, name, sex, 
      address, tel, classid, 
      usertype, password, loginname, 
      files)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER}, 
      #{usertype,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, 
      #{files,jdbcType=VARCHAR})
  </insert>
 
 <!--  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, sex, address, tel, classid, usertype, password, loginname, files
  </sql>
  <select id="selectByExample" parameterType="com.offcn.pojo.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByExample" parameterType="com.offcn.pojo.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.offcn.pojo.Student">
    insert into student (id, name, sex, 
      address, tel, classid, 
      usertype, password, loginname, 
      files)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{classid,jdbcType=INTEGER}, 
      #{usertype,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{loginname,jdbcType=VARCHAR}, 
      #{files,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.offcn.pojo.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="classid != null">
        classid,
      </if>
      <if test="usertype != null">
        usertype,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="loginname != null">
        loginname,
      </if>
      <if test="files != null">
        files,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="files != null">
        #{files,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.offcn.pojo.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.classid != null">
        classid = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.usertype != null">
        usertype = #{record.usertype,jdbcType=INTEGER},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.loginname != null">
        loginname = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.files != null">
        files = #{record.files,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.offcn.pojo.Student">
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="classid != null">
        classid = #{classid,jdbcType=INTEGER},
      </if>
      <if test="usertype != null">
        usertype = #{usertype,jdbcType=INTEGER},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="loginname != null">
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="files != null">
        files = #{files,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.offcn.pojo.Student">
    update student
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      classid = #{classid,jdbcType=INTEGER},
      usertype = #{usertype,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR},
      loginname = #{loginname,jdbcType=VARCHAR},
      files = #{files,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update> -->
</mapper>